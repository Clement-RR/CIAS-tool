export const scenarios = {
    Simple: {
        matrixSize: 9,
        nodeNames: ["Production", "Logistics & Storage", "Maintenance", "Compliance & Standards", "Suppliers",
            "Design & Engineering", "Process Design", "Quality Management", "Material Specification"],
        matrices: {
            transitionMatrix: [
                [0, 0.5, 0.6, 0.65, 0.5, 0, 0.8, 0.9, 0.4],
                [0.3, 0, 0, 0, 0, 0, 0.6, 0, 0],
                [0, 0, 0, 0, 0, 0, 0.4, 0, 0],
                [0.5, 0, 0, 0, 0.5, 0.4, 0.5, 0.6, 0.7],
                [0.4, 0.7, 0, 0.7, 0, 0.1, 0, 0, 0.9],
                [0.8, 0.4, 0.3, 0.6, 0.7, 0, 0.4, 0.4, 0.4],
                [0.5, 0.7, 0.4, 0.5, 0, 0, 0, 0, 0],
                [0.6, 0, 0, 0.7, 0, 0.4, 0.6, 0, 0.5],
                [0.4, 0.3, 0.5, 0.8, 0.9, 0.8, 0, 0.5, 0]
            ],
            bestCostMatrix: [
                [0, 5000, 6000, 6500, 5000, 0, 8000, 9000, 4000],
                [3000, 0, 0, 0, 0, 0, 6000, 0, 0],
                [0, 0, 0, 0, 0, 0, 4000, 0, 0],
                [5000, 0, 0, 0, 5000, 4000, 5000, 6000, 7000],
                [2000, 7000, 0, 7000, 0, 1000, 0, 0, 9000],
                [8000, 4000, 3000, 6000, 7000, 0, 4000, 4000, 4000],
                [5000, 7000, 4000, 5000, 0, 0, 0, 0, 0],
                [6000, 0, 0, 7000, 0, 4000, 6000, 0, 5000],
                [4000, 3000, 5000, 8000, 9000, 8000, 0, 5000, 0]
            ],
            mostProbableCostMatrix: [], // This will be computed dynamically based on bestCostMatrix
            worstCostMatrix: [], // This will be computed dynamically based on bestCostMatrix
            bestTimeMatrix: [
                [0, 50, 60, 65, 50, 0, 80, 90, 40],
                [30, 0, 0, 0, 0, 0, 60, 0, 0],
                [0, 0, 0, 0, 0, 0, 40, 0, 0],
                [50, 0, 0, 0, 50, 40, 50, 60, 70],
                [20, 70, 0, 70, 0, 10, 0, 0, 90],
                [80, 40, 30, 60, 70, 0, 40, 40, 40],
                [50, 70, 40, 50, 0, 0, 0, 0, 0],
                [60, 0, 0, 70, 0, 40, 60, 0, 50],
                [40, 30, 50, 80, 90, 80, 0, 50, 0]
            ],
            mostProbableTimeMatrix: [], // This will be computed dynamically
            worstTimeMatrix: [], // This will be computed dynamically
        },
    },
    Standard: {
        matrixSize: 16,
        nodeNames: ["Manufacturing", "Assembly", "Logistics", "Warehouse", "Maintenance", "Equipment", "Compliance",
            "Industry Standards", "Procurement", "Supplier", "Product Design", "Product Engineering",
            "Process Planning", "Process Execution", "Quality Management", "Material Specification"],
        matrices: {
            transitionMatrix: [
                [0, 0.5, 0.3, 0.3, 0.6, 0.6, 0.7, 0.7, 0.3, 0.3, 0, 0, 0.8, 0.8, 0.9, 0.4],
                [0.5, 0, 0.7, 0.7, 0.6, 0.6, 0.6, 0.6, 0.7, 0.7, 0, 0, 0.8, 0.8, 0.9, 0.4],
                [0.3, 0.3, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.6, 0.6, 0, 0],
                [0.3, 0.3, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.6, 0.6, 0, 0],
                [0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0.4, 0.4, 0, 0],
                [0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.4, 0, 0],
                [0.5, 0.5, 0, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0.4, 0.4, 0.5, 0.5, 0.6, 0.7],
                [0.5, 0.5, 0, 0, 0, 0, 0.5, 0, 0.5, 0.5, 0.4, 0.4, 0.5, 0.5, 0.6, 0.7],
                [0.4, 0.4, 0.7, 0.7, 0, 0, 0.7, 0.7, 0, 0.5, 0.1, 0.1, 0, 0, 0, 0.9],
                [0.4, 0.4, 0.7, 0.7, 0, 0, 0.7, 0.7, 0.5, 0, 0.1, 0.1, 0, 0, 0, 0.9],
                [0.8, 0.8, 0.4, 0.4, 0.3, 0.3, 0.6, 0.6, 0.7, 0.7, 0, 0.5, 0.4, 0.4, 0.4, 0.4],
                [0.8, 0.8, 0.4, 0.4, 0.3, 0.3, 0.6, 0.6, 0.7, 0.7, 0.5, 0, 0.4, 0.4, 0.4, 0.4],
                [0.5, 0.5, 0.7,	0.7, 0.4, 0.4, 0.5, 0.5, 0,	0, 0, 0, 0, 0.5, 0,	0],
                [0.5, 0.5, 0.7,	0.7, 0.4, 0.4, 0.5, 0.5, 0,	0, 0, 0, 0.5, 0, 0,	0],
                [0.6, 0.6, 0, 0, 0, 0, 0.7, 0.7, 0,	0, 0.4, 0.4, 0.6, 0.6, 0, 0.5],
                [0.4, 0.4, 0.3,	0.3, 0.5, 0.5, 0.8,	0.8, 0.9, 0.9, 0.8,	0.8, 0, 0, 0.5, 0]
            ],
            bestCostMatrix: [],
            mostProbableCostMatrix: [], // This will be computed dynamically based on bestCostMatrix
            worstCostMatrix: [], // This will be computed dynamically based on bestCostMatrix
            bestTimeMatrix: [],
            mostProbableTimeMatrix: [], // This will be computed dynamically
            worstTimeMatrix: [], // This will be computed dynamically
        }
        },
    Complex: {
        matrixSize: 36,
        nodeNames: ["Assembly Line", "Machinery", "Monitoring", "Tooling", "Component Manufacturing",
            "Inventory Management", "Warehouse", "Materials Handling", "Shipping & Receiving", "Transportation",
            "Technology & Information Systems", "Preventive Maintenance", "Corrective Maintenance",
            "Predictive Maintenance", "Condition Monitoring", "Facility Maintenance", "Equipment Management",
            "Regulatory Compliance", "Industry Standards", "Product Certification", "Procurement", "Material Suppliers",
            "Component Suppliers", "Engineering Specifications", "CAD/CAM", "Prototyping", "Product Design",
            "Documentation", "Process Mapping", "Equipment Selection", "Layout Design",
            "Process Simulation", "Cost Analysis", "Environmental Impact", "Quality Planning",
            "Material Specification"],
        matrices: {
            transitionMatrix: [
                [0, 0.5, 0.5, 0.5, 0.5, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.7, 0.7, 0.7, 0, 0, 0, 0, 0, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.9, 0.4],
                [0.5, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.65, 0.65, 0.65, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.9, 0.4],
                [0.5, 0.5, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.65, 0.65, 0.65, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.9, 0.4],
                [0.5, 0.5, 0.5, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.65, 0.65, 0.65, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.9, 0.4],
                [0.5, 0.5, 0.5, 0.5, 0, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.7, 0.7, 0.7, 0.3, 0.3, 0.3, 0, 0, 0, 0, 0, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.9, 0.4],
                [0.3, 0.3, 0.3, 0.3, 0.3, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0, 0],
                [0.3, 0.3, 0.3, 0.3, 0.3, 0.5, 0, 0.5, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0, 0],
                [0.3, 0.3, 0.3, 0.3, 0.3, 0.5, 0.5, 0, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0, 0],
                [0.3, 0.3, 0.3, 0.3, 0.3, 0.5, 0.5, 0.5, 0, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0, 0],
                [0.3, 0.3, 0.3, 0.3, 0.3, 0.5, 0.5, 0.5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0, 0],
                [0.3, 0.3, 0.3, 0.3, 0.3, 0.5, 0.5, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0.5, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0, 0],
                [0.5, 0.5, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.6, 0.7],
                [0.5, 0.5, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0.5, 0.5, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.6, 0.7],
                [0.5, 0.5, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.6, 0.7],
                [0.4, 0.4, 0.4, 0.4, 0.4, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0, 0, 0, 0, 0, 0, 0.7, 0.7, 0.7, 0, 0.5, 0.5, 0.1, 0.1, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0.9],
                [0.4, 0.4, 0.4, 0.4, 0.4, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0, 0, 0, 0, 0, 0, 0.7, 0.7, 0.7, 0.5, 0, 0.5, 0.1, 0.1, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0.9],
                [0.4, 0.4, 0.4, 0.4, 0.4, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0, 0, 0, 0, 0, 0, 0.7, 0.7, 0.7, 0.5, 0.5, 0, 0.1, 0.1, 0.1, 0.1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0.9],
                [0.8, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.6, 0.6, 0.6, 0.7, 0.7, 0.7, 0, 0.5, 0.5, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4],
                [0.8, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.6, 0.6, 0.6, 0.7, 0.7, 0.7, 0.5, 0, 0.5, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4],
                [0.8, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.6, 0.6, 0.6, 0.7, 0.7, 0.7, 0.5, 0.5, 0, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4],
                [0.8, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.6, 0.6, 0.6, 0.7, 0.7, 0.7, 0.5, 0.5, 0.5, 0, 0.5, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4],
                [0.8, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.6, 0.6, 0.6, 0.7, 0.7, 0.7, 0.5, 0.5, 0.5, 0.5, 0, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4],
                [0.5, 0.5, 0.5, 0.5, 0.5, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0, 0],
                [0.5, 0.5, 0.5, 0.5, 0.5, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0.5, 0.5, 0.5, 0.5, 0, 0],
                [0.5, 0.5, 0.5, 0.5, 0.5, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0.5, 0, 0],
                [0.5, 0.5, 0.5, 0.5, 0.5, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0, 0.5, 0.5, 0, 0],
                [0.5, 0.5, 0.5, 0.5, 0.5, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0.5, 0, 0.5, 0, 0],
                [0.5, 0.5, 0.5, 0.5, 0.5, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0, 0, 0],
                [0.6, 0.6, 0.6, 0.6, 0.6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.7, 0.7, 0.7, 0, 0, 0, 0.4, 0.4, 0.4, 0.4, 0.4, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0, 0.5],
                [0.4, 0.4, 0.4, 0.4, 0.4, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.8, 0.8, 0.8, 0.9, 0.9, 0.9, 0.8, 0.8, 0.8, 0.8, 0.8, 0, 0, 0, 0, 0, 0, 0.5, 0]
            ],
            bestCostMatrix: [
                [0, 5000, 5000, 5000, 5000, 7000, 7000, 7000, 7000, 7000, 7000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 7000, 7000, 7000, 0, 0, 0, 0, 0, 8000, 8000, 8000, 8000, 8000, 8000, 9000, 4000],
                [5000, 0, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 6000, 6000, 6000, 6000, 6000, 6000, 6500, 6500, 6500, 5000, 5000, 5000, 0, 0, 0, 0, 0, 8000, 8000, 8000, 8000, 8000, 8000, 9000, 4000],
                [5000, 5000, 0, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 6000, 6000, 6000, 6000, 6000, 6000, 6500, 6500, 6500, 5000, 5000, 5000, 0, 0, 0, 0, 0, 8000, 8000, 8000, 8000, 8000, 8000, 9000, 4000],
                [5000, 5000, 5000, 0, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 6000, 6000, 6000, 6000, 6000, 6000, 6500, 6500, 6500, 5000, 5000, 5000, 0, 0, 0, 0, 0, 8000, 8000, 8000, 8000, 8000, 8000, 9000, 4000],
                [5000, 5000, 5000, 5000, 0, 3000, 3000, 3000, 3000, 3000, 3000, 6000, 6000, 6000, 6000, 6000, 6000, 7000, 7000, 7000, 3000, 3000, 3000, 0, 0, 0, 0, 0, 8000, 8000, 8000, 8000, 8000, 8000, 9000, 4000],
                [3000, 3000, 3000, 3000, 3000, 0, 5000, 5000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 6000, 6000, 6000, 6000, 6000, 0, 0],
                [3000, 3000, 3000, 3000, 3000, 5000, 0, 5000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 6000, 6000, 6000, 6000, 6000, 0, 0],
                [3000, 3000, 3000, 3000, 3000, 5000, 5000, 0, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 6000, 6000, 6000, 6000, 6000, 0, 0],
                [3000, 3000, 3000, 3000, 3000, 5000, 5000, 5000, 0, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 6000, 6000, 6000, 6000, 6000, 0, 0],
                [3000, 3000, 3000, 3000, 3000, 5000, 5000, 5000, 5000, 0, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 6000, 6000, 6000, 6000, 6000, 0, 0],
                [3000, 3000, 3000, 3000, 3000, 5000, 5000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6000, 6000, 6000, 6000, 6000, 6000, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4000, 4000, 4000, 4000, 4000, 4000, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 0, 5000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4000, 4000, 4000, 4000, 4000, 4000, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 0, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4000, 4000, 4000, 4000, 4000, 4000, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 5000, 0, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4000, 4000, 4000, 4000, 4000, 4000, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 5000, 5000, 0, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4000, 4000, 4000, 4000, 4000, 4000, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4000, 4000, 4000, 4000, 4000, 4000, 0, 0],
                [5000, 5000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 5000, 5000, 5000, 5000, 4000, 4000, 4000, 4000, 4000, 5000, 5000, 5000, 5000, 5000, 5000, 6000, 7000],
                [5000, 5000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 0, 5000, 5000, 5000, 5000, 5000, 4000, 4000, 4000, 4000, 4000, 5000, 5000, 5000, 5000, 5000, 5000, 6000, 7000],
                [5000, 5000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 0, 5000, 5000, 5000, 5000, 4000, 4000, 4000, 4000, 4000, 5000, 5000, 5000, 5000, 5000, 5000, 6000, 7000],
                [4000, 4000, 4000, 4000, 4000, 7000, 7000, 7000, 7000, 7000, 7000, 0, 0, 0, 0, 0, 0, 7000, 7000, 7000, 0, 5000, 5000, 1000, 1000, 1000, 1000, 1000, 0, 0, 0, 0, 0, 0, 0, 9000],
                [4000, 4000, 4000, 4000, 4000, 7000, 7000, 7000, 7000, 7000, 7000, 0, 0, 0, 0, 0, 0, 7000, 7000, 7000, 5000, 0, 5000, 1000, 1000, 1000, 1000, 1000, 0, 0, 0, 0, 0, 0, 0, 9000],
                [4000, 4000, 4000, 4000, 4000, 7000, 7000, 7000, 7000, 7000, 7000, 0, 0, 0, 0, 0, 0, 7000, 7000, 7000, 5000, 5000, 0, 1000, 1000, 1000, 1000, 1000, 0, 0, 0, 0, 0, 0, 0, 9000],
                [8000, 8000, 8000, 8000, 8000, 4000, 4000, 4000, 4000, 4000, 4000, 3000, 3000, 3000, 3000, 3000, 3000, 6000, 6000, 6000, 7000, 7000, 7000, 0, 5000, 5000, 5000, 5000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000],
                [8000, 8000, 8000, 8000, 8000, 4000, 4000, 4000, 4000, 4000, 4000, 3000, 3000, 3000, 3000, 3000, 3000, 6000, 6000, 6000, 7000, 7000, 7000, 5000, 0, 5000, 5000, 5000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000],
                [8000, 8000, 8000, 8000, 8000, 4000, 4000, 4000, 4000, 4000, 4000, 3000, 3000, 3000, 3000, 3000, 3000, 6000, 6000, 6000, 7000, 7000, 7000, 5000, 5000, 0, 5000, 5000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000],
                [8000, 8000, 8000, 8000, 8000, 4000, 4000, 4000, 4000, 4000, 4000, 3000, 3000, 3000, 3000, 3000, 3000, 6000, 6000, 6000, 7000, 7000, 7000, 5000, 5000, 5000, 0, 5000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000],
                [8000, 8000, 8000, 8000, 8000, 4000, 4000, 4000, 4000, 4000, 4000, 3000, 3000, 3000, 3000, 3000, 3000, 6000, 6000, 6000, 7000, 7000, 7000, 5000, 5000, 5000, 5000, 0, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000],
                [5000, 5000, 5000, 5000, 5000, 7000, 7000, 7000, 7000, 7000, 7000, 4000, 4000, 4000, 4000, 4000, 4000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 5000, 5000, 5000, 0, 0],
                [5000, 5000, 5000, 5000, 5000, 7000, 7000, 7000, 7000, 7000, 7000, 4000, 4000, 4000, 4000, 4000, 4000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 0, 5000, 5000, 5000, 5000, 0, 0],
                [5000, 5000, 5000, 5000, 5000, 7000, 7000, 7000, 7000, 7000, 7000, 4000, 4000, 4000, 4000, 4000, 4000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 0, 5000, 5000, 5000, 0, 0],
                [5000, 5000, 5000, 5000, 5000, 7000, 7000, 7000, 7000, 7000, 7000, 4000, 4000, 4000, 4000, 4000, 4000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 5000, 0, 5000, 5000, 0, 0],
                [5000, 5000, 5000, 5000, 5000, 7000, 7000, 7000, 7000, 7000, 7000, 4000, 4000, 4000, 4000, 4000, 4000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 5000, 5000, 0, 5000, 0, 0],
                [5000, 5000, 5000, 5000, 5000, 7000, 7000, 7000, 7000, 7000, 7000, 4000, 4000, 4000, 4000, 4000, 4000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 5000, 5000, 5000, 0, 0, 0],
                [5000, 5000, 5000, 5000, 5000, 7000, 7000, 7000, 7000, 7000, 7000, 4000, 4000, 4000, 4000, 4000, 4000, 5000, 5000, 5000, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 5000, 5000, 5000, 5000, 0, 0],
                [6000, 6000, 6000, 6000, 6000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7000, 7000, 7000, 0, 0, 0, 4000, 4000, 4000, 4000, 4000, 6000, 6000, 6000, 6000, 6000, 6000, 0, 5000],
                [4000, 4000, 4000, 4000, 4000, 3000, 3000, 3000, 3000, 3000, 3000, 5000, 5000, 5000, 5000, 5000, 5000, 8000, 8000, 8000, 9000, 9000, 9000, 8000, 8000, 8000, 8000, 8000, 0, 0, 0, 0, 0, 0, 0, 5000]
            ],
            mostProbableCostMatrix: [], // This will be computed dynamically based on bestCostMatrix
            worstCostMatrix: [], // This will be computed dynamically based on bestCostMatrix
            bestTimeMatrix: [
                [0, 50, 50, 50, 50, 70, 70, 70, 70, 70, 70, 60, 60, 60, 60, 60, 60, 60, 60, 60, 70, 70, 70, 0, 0, 0, 0, 0, 80, 80, 80, 80, 80, 80, 90, 40],
                [50, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 60, 60, 60, 60, 60, 60, 65, 65, 65, 50, 50, 50, 0, 0, 0, 0, 0, 80, 80, 80, 80, 80, 80, 90, 40],
                [50, 50, 0, 50, 50, 50, 50, 50, 50, 50, 50, 60, 60, 60, 60, 60, 60, 65, 65, 65, 50, 50, 50, 0, 0, 0, 0, 0, 80, 80, 80, 80, 80, 80, 90, 40],
                [50, 50, 50, 0, 50, 50, 50, 50, 50, 50, 50, 60, 60, 60, 60, 60, 60, 65, 65, 65, 50, 50, 50, 0, 0, 0, 0, 0, 80, 80, 80, 80, 80, 80, 90, 40],
                [50, 50, 50, 50, 0, 30, 30, 30, 30, 30, 30, 60, 60, 60, 60, 60, 60, 70, 70, 70, 30, 30, 30, 0, 0, 0, 0, 0, 80, 80, 80, 80, 80, 80, 90, 40],
                [30, 30, 30, 30, 30, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 60, 60, 60, 60, 60, 0, 0],
                [30, 30, 30, 30, 30, 50, 0, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 60, 60, 60, 60, 60, 0, 0],
                [30, 30, 30, 30, 30, 50, 50, 0, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 60, 60, 60, 60, 60, 0, 0],
                [30, 30, 30, 30, 30, 50, 50, 50, 0, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 60, 60, 60, 60, 60, 0, 0],
                [30, 30, 30, 30, 30, 50, 50, 50, 50, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 60, 60, 60, 60, 60, 0, 0],
                [30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 60, 60, 60, 60, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 40, 40, 40, 40, 40, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 40, 40, 40, 40, 40, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 0, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 40, 40, 40, 40, 40, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 0, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 40, 40, 40, 40, 40, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 40, 40, 40, 40, 40, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 40, 40, 40, 40, 40, 0, 0],
                [50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 40, 40, 40, 40, 40, 50, 50, 50, 50, 50, 50, 60, 70],
                [50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 50, 50, 50, 50, 40, 40, 40, 40, 40, 50, 50, 50, 50, 50, 50, 60, 70],
                [50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 0, 50, 50, 50, 40, 40, 40, 40, 40, 50, 50, 50, 50, 50, 50, 60, 70],
                [40, 40, 40, 40, 40, 70, 70, 70, 70, 70, 70, 0, 0, 0, 0, 0, 0, 70, 70, 70, 0, 50, 50, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, 0, 90],
                [40, 40, 40, 40, 40, 70, 70, 70, 70, 70, 70, 0, 0, 0, 0, 0, 0, 70, 70, 70, 50, 0, 50, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, 0, 90],
                [40, 40, 40, 40, 40, 70, 70, 70, 70, 70, 70, 0, 0, 0, 0, 0, 0, 70, 70, 70, 50, 50, 0, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, 0, 90],
                [80, 80, 80, 80, 80, 40, 40, 40, 40, 40, 40, 30, 30, 30, 30, 30, 30, 60, 60, 60, 70, 70, 70, 0, 50, 50, 50, 50, 40, 40, 40, 40, 40, 40, 40, 40],
                [80, 80, 80, 80, 80, 40, 40, 40, 40, 40, 40, 30, 30, 30, 30, 30, 30, 60, 60, 60, 70, 70, 70, 50, 0, 50, 50, 50, 40, 40, 40, 40, 40, 40, 40, 40],
                [80, 80, 80, 80, 80, 40, 40, 40, 40, 40, 40, 30, 30, 30, 30, 30, 30, 60, 60, 60, 70, 70, 70, 50, 50, 0, 50, 50, 40, 40, 40, 40, 40, 40, 40, 40],
                [80, 80, 80, 80, 80, 40, 40, 40, 40, 40, 40, 30, 30, 30, 30, 30, 30, 60, 60, 60, 70, 70, 70, 50, 50, 50, 0, 50, 40, 40, 40, 40, 40, 40, 40, 40],
                [80, 80, 80, 80, 80, 40, 40, 40, 40, 40, 40, 30, 30, 30, 30, 30, 30, 60, 60, 60, 70, 70, 70, 50, 50, 50, 50, 0, 40, 40, 40, 40, 40, 40, 40, 40],
                [50, 50, 50, 50, 50, 70, 70, 70, 70, 70, 70, 40, 40, 40, 40, 40, 40, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0],
                [50, 50, 50, 50, 50, 70, 70, 70, 70, 70, 70, 40, 40, 40, 40, 40, 40, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 50, 50, 50, 50, 0, 0],
                [50, 50, 50, 50, 50, 70, 70, 70, 70, 70, 70, 40, 40, 40, 40, 40, 40, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 0, 50, 50, 50, 0, 0],
                [50, 50, 50, 50, 50, 70, 70, 70, 70, 70, 70, 40, 40, 40, 40, 40, 40, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 0, 50, 50, 0, 0],
                [50, 50, 50, 50, 50, 70, 70, 70, 70, 70, 70, 40, 40, 40, 40, 40, 40, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 0, 50, 0, 0],
                [50, 50, 50, 50, 50, 70, 70, 70, 70, 70, 70, 40, 40, 40, 40, 40, 40, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0],
                [60, 60, 60, 60, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 70, 70, 0, 0, 0, 40, 40, 40, 40, 40, 60, 60, 60, 60, 60, 60, 0, 50],
                [40, 40, 40, 40, 40, 30, 30, 30, 30, 30, 30, 50, 50, 50, 50, 50, 50, 80, 80, 80, 90, 90, 90, 80, 80, 80, 80, 80, 0, 0, 0, 0, 0, 0, 0, 50],
            ],
            mostProbableTimeMatrix: [], // This will be computed dynamically
            worstTimeMatrix: [], // This will be computed dynamically
        }
    }
};

// Dynamically compute cost and time matrices based on best matrices
Object.keys(scenarios).forEach(scenarioKey => {
    const scenario = scenarios[scenarioKey];
    const matrices = scenario.matrices;

    matrices.bestCostMatrix = matrices.transitionMatrix.map(row =>
        row.map(value => value * 10000)
    );

    matrices.mostProbableCostMatrix = matrices.bestCostMatrix.map(row =>
        row.map(value => value * 2)
    );
    matrices.worstCostMatrix = matrices.bestCostMatrix.map(row =>
        row.map(value => value * 5)
    );

    matrices.bestTimeMatrix = matrices.transitionMatrix.map(row =>
        row.map(value => value * 100)
    );

    matrices.mostProbableTimeMatrix = matrices.bestTimeMatrix.map(row =>
        row.map(value => value * 2)
    );
    matrices.worstTimeMatrix = matrices.bestTimeMatrix.map(row =>
        row.map(value => value * 5)
    );
});

export const changeClasses = {
    'All': {
        Simple: {
            rows: [0, 1, 2, 3, 4],
            cols: [0, 1, 2, 3, 4],
            propagationPaths: {
                1: [2, 3, 4, 5],
                2: [1],
                3: [],
                4: [1, 5],
                5: [1, 2, 4],
            }
        },
        Standard: {
            rows: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], // 0-index
            cols: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
            propagationPaths: {
                1: [2, 3, 4, 5, 6, 7, 8 ,9, 10],
                2: [1, 3, 4, 5, 6, 7, 8 ,9, 10],
                3: [1, 2, 4],
                4: [1, 2, 3],
                5: [6],
                6: [5],
                7: [1, 2, 8, 9, 10],
                8: [1, 2, 7, 9, 10],
                9: [1, 2, 3, 4, 7, 8, 10],
                10: [1, 2, 3, 4, 7, 8, 9]
            }
        },
        Complex: {
            rows: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], // 0-index
            cols: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22],
            propagationPaths: {
                1: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], // Production
                2: [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], // Production
                3: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], // Production
                4: [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], // Production
                5: [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], // Production
                6: [1, 2, 3, 4, 5, 7, 8, 9, 10, 11], // Logistics & Warehouse
                7: [1, 2, 3, 4, 5, 6, 8, 9, 10, 11], // Logistics & Warehouse
                8: [1, 2, 3, 4, 5, 6, 7, 9, 10, 11], // Logistics & Warehouse
                9: [1, 2, 3, 4, 5, 6, 7, 8, 10, 11], // Logistics & Warehouse
                10: [1, 2, 3, 4, 5, 6, 7, 8, 9, 11], // Logistics & Warehouse
                11: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], // Logistics & Warehouse
                12: [13, 14, 15, 16, 17], // Maintenance
                13: [12, 14, 15, 16, 17], // Maintenance
                14: [12, 13, 15, 16, 17], // Maintenance
                15: [12, 13, 14, 16, 17], // Maintenance
                16: [12, 13, 14, 15, 17], // Maintenance
                17: [12, 13, 14, 15, 16], // Maintenance
                18: [1, 2, 3, 4, 5, 19, 20, 21, 22, 23], // Compliance & Standards
                19: [1, 2, 3, 4, 5, 18, 20, 21, 22, 23], // Compliance & Standards
                20: [1, 2, 3, 4, 5, 18, 19, 21, 22, 23], // Compliance & Standards
                21: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 22, 23], // Suppliers
                22: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 23], // Suppliers
                23: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22] // Suppliers
            }
        }
    },
    'Engineering Change': {
        Simple: {
            rows: [0, 1, 2, 3, 4, 5],
            cols: [0, 1, 2, 3, 4, 5],
            propagationPaths: {
                1: [2, 3, 4, 5],
                2: [1],
                3: [],
                4: [1, 5, 6],
                5: [1, 2, 4, 6],
                6: [1, 2, 3, 4, 5]
            }
        },
        Standard: {
            rows: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], // 0-index
            cols: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
            propagationPaths: {
                1: [2, 3, 4, 5, 6, 7, 8 ,9, 10],
                2: [1, 3, 4, 5, 6, 7, 8 ,9, 10],
                3: [1, 2, 4],
                4: [1, 2, 3],
                5: [6],
                6: [5],
                7: [1, 2, 8, 9, 10, 11, 12],
                8: [1, 2, 7, 9, 10, 11, 12],
                9: [1, 2, 3, 4, 7, 8, 10, 11, 12],
                10: [1, 2, 3, 4, 7, 8, 9, 11, 12],
                11: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],
                12: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
            }
        },
        Complex: {
            rows: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], // 0-index
            cols: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27],
            propagationPaths: {
                1: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], // Production
                2: [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], // Production
                3: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], // Production
                4: [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], // Production
                5: [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], // Production
                6: [1, 2, 3, 4, 5, 7, 8, 9, 10, 11], // Logistics & Warehouse
                7: [1, 2, 3, 4, 5, 6, 8, 9, 10, 11], // Logistics & Warehouse
                8: [1, 2, 3, 4, 5, 6, 7, 9, 10, 11], // Logistics & Warehouse
                9: [1, 2, 3, 4, 5, 6, 7, 8, 10, 11], // Logistics & Warehouse
                10: [1, 2, 3, 4, 5, 6, 7, 8, 9, 11], // Logistics & Warehouse
                11: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], // Logistics & Warehouse
                12: [13, 14, 15, 16, 17], // Maintenance
                13: [12, 14, 15, 16, 17], // Maintenance
                14: [12, 13, 15, 16, 17], // Maintenance
                15: [12, 13, 14, 16, 17], // Maintenance
                16: [12, 13, 14, 15, 17], // Maintenance
                17: [12, 13, 14, 15, 16], // Maintenance
                18: [1, 2, 3, 4, 5, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], // Compliance & Standards
                19: [1, 2, 3, 4, 5, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28], // Compliance & Standards
                20: [1, 2, 3, 4, 5, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28], // Compliance & Standards
                21: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28], // Suppliers
                22: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28], // Suppliers
                23: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28], // Suppliers
                24: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28], // Design & Engineering
                25: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28], // Design & Engineering
                26: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28], // Design & Engineering
                27: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28], // Design & Engineering
                28: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27] // Design & Engineering
            }
        }
    },
    'Process Change': {
        Simple: {
            rows: [0, 1, 2, 3, 4, 6],
            cols: [0, 1, 2, 3, 4, 6],
            propagationPaths: {
                1: [2, 3, 4, 5, 7],
                2: [1, 7],
                3: [7],
                4: [1, 5, 7],
                5: [1, 2, 4],
                7: [1, 2, 3, 4]
            }
        },
        Standard: {
            rows: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13], // 0-index
            cols: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13],
            propagationPaths: {
                1: [2, 3, 4, 5, 6, 7, 8 ,9, 10, 13, 14],
                2: [1, 3, 4, 5, 6, 7, 8 ,9, 10, 13, 14],
                3: [1, 2, 4, 13, 14],
                4: [1, 2, 3, 13, 14],
                5: [6, 13, 14],
                6: [5, 13, 14],
                7: [1, 2, 8, 9, 10, 13, 14],
                8: [1, 2, 7, 9, 10, 13, 14],
                9: [1, 2, 3, 4, 7, 8, 10],
                10: [1, 2, 3, 4, 7, 8, 9],
                13: [1, 2, 3, 4, 5, 6, 7, 8, 14],
                14: [1, 2, 3, 4, 5, 6, 7, 8, 13]
            }
        },
        Complex: {
            rows: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 33], // 0-index
            cols: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 33],
            propagationPaths: {
                1: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Production
                2: [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Production
                3: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Production
                4: [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Production
                5: [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Production
                6: [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 29, 30, 31, 32, 33, 34], // Logistics & Warehouse
                7: [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 29, 30, 31, 32, 33, 34], // Logistics & Warehouse
                8: [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 29, 30, 31, 32, 33, 34], // Logistics & Warehouse
                9: [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 29, 30, 31, 32, 33, 34], // Logistics & Warehouse
                10: [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 29, 30, 31, 32, 33, 34], // Logistics & Warehouse
                11: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 29, 30, 31, 32, 33, 34], // Logistics & Warehouse
                12: [13, 14, 15, 16, 17, 29, 30, 31, 32, 33, 34], // Maintenance
                13: [12, 14, 15, 16, 17, 29, 30, 31, 32, 33, 34], // Maintenance
                14: [12, 13, 15, 16, 17, 29, 30, 31, 32, 33, 34], // Maintenance
                15: [12, 13, 14, 16, 17, 29, 30, 31, 32, 33, 34], // Maintenance
                16: [12, 13, 14, 15, 17, 29, 30, 31, 32, 33, 34], // Maintenance
                17: [12, 13, 14, 15, 16, 29, 30, 31, 32, 33, 34], // Maintenance
                18: [1, 2, 3, 4, 5, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Compliance & Standards
                19: [1, 2, 3, 4, 5, 18, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Compliance & Standards
                20: [1, 2, 3, 4, 5, 18, 19, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Compliance & Standards
                21: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 22, 23], // Suppliers
                22: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 23], // Suppliers
                23: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22], // Suppliers
                29: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 30, 31, 32, 33, 34], // Process Design
                30: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 31, 32, 33, 34], // Process Design
                31: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 32, 33, 34], // Process Design
                32: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 31, 33, 34], // Process Design
                33: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 31, 32, 34], // Process Design
                34: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 31, 32, 33] // Process Design
            }
        }
    },
    'Compliance Change': {
        Simple: {
            rows: [0, 1, 2, 3, 4, 6],
            cols: [0, 1, 2, 3, 4, 6],
            propagationPaths: {
                1: [2, 3, 4, 5, 7],
                2: [1, 7],
                3: [7],
                4: [1, 5, 7],
                5: [1, 2, 4],
                7: [1, 2, 3, 4]
            }
        },
        Standard: {
            rows: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13], // 0-index
            cols: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13],
            propagationPaths: {
                1: [2, 3, 4, 5, 6, 7, 8 ,9, 10, 13, 14],
                2: [1, 3, 4, 5, 6, 7, 8 ,9, 10, 13, 14],
                3: [1, 2, 4, 13, 14],
                4: [1, 2, 3, 13, 14],
                5: [6, 13, 14],
                6: [5, 13, 14],
                7: [1, 2, 8, 9, 10, 13, 14],
                8: [1, 2, 7, 9, 10, 13, 14],
                9: [1, 2, 3, 4, 7, 8, 10],
                10: [1, 2, 3, 4, 7, 8, 9],
                13: [1, 2, 3, 4, 5, 6, 7, 8, 14],
                14: [1, 2, 3, 4, 5, 6, 7, 8, 13]
            }
        },
        Complex: {
            rows: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 33], // 0-index
            cols: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 33],
            propagationPaths: {
                1: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Production
                2: [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Production
                3: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Production
                4: [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Production
                5: [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Production
                6: [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 29, 30, 31, 32, 33, 34], // Logistics & Warehouse
                7: [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 29, 30, 31, 32, 33, 34], // Logistics & Warehouse
                8: [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 29, 30, 31, 32, 33, 34], // Logistics & Warehouse
                9: [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 29, 30, 31, 32, 33, 34], // Logistics & Warehouse
                10: [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 29, 30, 31, 32, 33, 34], // Logistics & Warehouse
                11: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 29, 30, 31, 32, 33, 34], // Logistics & Warehouse
                12: [13, 14, 15, 16, 17, 29, 30, 31, 32, 33, 34], // Maintenance
                13: [12, 14, 15, 16, 17, 29, 30, 31, 32, 33, 34], // Maintenance
                14: [12, 13, 15, 16, 17, 29, 30, 31, 32, 33, 34], // Maintenance
                15: [12, 13, 14, 16, 17, 29, 30, 31, 32, 33, 34], // Maintenance
                16: [12, 13, 14, 15, 17, 29, 30, 31, 32, 33, 34], // Maintenance
                17: [12, 13, 14, 15, 16, 29, 30, 31, 32, 33, 34], // Maintenance
                18: [1, 2, 3, 4, 5, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Compliance & Standards
                19: [1, 2, 3, 4, 5, 18, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Compliance & Standards
                20: [1, 2, 3, 4, 5, 18, 19, 21, 22, 23, 29, 30, 31, 32, 33, 34], // Compliance & Standards
                21: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 22, 23], // Suppliers
                22: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 23], // Suppliers
                23: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22], // Suppliers
                29: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 30, 31, 32, 33, 34], // Process Design
                30: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 31, 32, 33, 34], // Process Design
                31: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 32, 33, 34], // Process Design
                32: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 31, 33, 34], // Process Design
                33: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 31, 32, 34], // Process Design
                34: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 31, 32, 33] // Process Design
            }
        }
    },
    'Quality Change': {
        Simple: {
            rows: [0, 1, 2, 3, 4, 7],
            cols: [0, 1, 2, 3, 4, 7],
            propagationPaths: {
                1: [2, 3, 4, 5, 8],
                2: [1],
                3: [],
                4: [1, 5, 8],
                5: [1, 2, 4],
                8: [1, 4]
            }
        },
        Standard: {
            rows: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14], // 0-index
            cols: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14],
            propagationPaths: {
                1: [2, 3, 4, 5, 6, 7, 8 ,9, 10, 15],
                2: [1, 3, 4, 5, 6, 7, 8 ,9, 10, 15],
                3: [1, 2, 4],
                4: [1, 2, 3],
                5: [6],
                6: [5],
                7: [1, 2, 8, 9, 10, 15],
                8: [1, 2, 7, 9, 10, 15],
                9: [1, 2, 3, 4, 7, 8, 10],
                10: [1, 2, 3, 4, 7, 8, 9],
                15: [1, 2, 7, 8]
            }
        },
        Complex: {
            rows: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 34], // 0-index
            cols: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 34],
            propagationPaths: {
                1: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35], // Production
                2: [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35], // Production
                3: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35], // Production
                4: [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35], // Production
                5: [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35], // Production
                6: [1, 2, 3, 4, 5, 7, 8, 9, 10, 11], // Logistics & Warehouse
                7: [1, 2, 3, 4, 5, 6, 8, 9, 10, 11], // Logistics & Warehouse
                8: [1, 2, 3, 4, 5, 6, 7, 9, 10, 11], // Logistics & Warehouse
                9: [1, 2, 3, 4, 5, 6, 7, 8, 10, 11], // Logistics & Warehouse
                10: [1, 2, 3, 4, 5, 6, 7, 8, 9, 11], // Logistics & Warehouse
                11: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], // Logistics & Warehouse
                12: [13, 14, 15, 16, 17], // Maintenance
                13: [12, 14, 15, 16, 17], // Maintenance
                14: [12, 13, 15, 16, 17], // Maintenance
                15: [12, 13, 14, 16, 17], // Maintenance
                16: [12, 13, 14, 15, 17], // Maintenance
                17: [12, 13, 14, 15, 16], // Maintenance
                18: [1, 2, 3, 4, 5, 19, 20, 21, 22, 23, 35], // Compliance & Standards
                19: [1, 2, 3, 4, 5, 18, 20, 21, 22, 23, 35], // Compliance & Standards
                20: [1, 2, 3, 4, 5, 18, 19, 21, 22, 23, 35], // Compliance & Standards
                21: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 22, 23], // Suppliers
                22: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 23], // Suppliers
                23: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22], // Suppliers
                35: [1, 2, 3, 4, 5, 18, 19, 20] // Quality Management
            }
        }
    },
    'Material Change': {
        Simple: {
            rows: [0, 1, 2, 3, 4, 8],
            cols: [0, 1, 2, 3, 4, 8],
            propagationPaths: {
                1: [2, 3, 4, 5, 9],
                2: [1],
                3: [],
                4: [1, 5, 9],
                5: [1, 2, 4, 9],
                9: [1, 2, 3, 4, 5]
            }
        },
        Standard: {
            rows: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15], // 0-index
            cols: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15],
            propagationPaths: {
                1: [2, 3, 4, 5, 6, 7, 8 ,9, 10, 16],
                2: [1, 3, 4, 5, 6, 7, 8 ,9, 10, 16],
                3: [1, 2, 4],
                4: [1, 2, 3],
                5: [6],
                6: [5],
                7: [1, 2, 8, 9, 10, 16],
                8: [1, 2, 7, 9, 10, 16],
                9: [1, 2, 3, 4, 7, 8, 10, 16],
                10: [1, 2, 3, 4, 7, 8, 9, 16],
                16: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
            }
        },
        Complex: {
            rows: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 35], // 0-index
            cols: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 35],
            propagationPaths: {
                1: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 36], // Production
                2: [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 36], // Production
                3: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 36], // Production
                4: [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 36], // Production
                5: [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 36], // Production
                6: [1, 2, 3, 4, 5, 7, 8, 9, 10, 11], // Logistics & Warehouse
                7: [1, 2, 3, 4, 5, 6, 8, 9, 10, 11], // Logistics & Warehouse
                8: [1, 2, 3, 4, 5, 6, 7, 9, 10, 11], // Logistics & Warehouse
                9: [1, 2, 3, 4, 5, 6, 7, 8, 10, 11], // Logistics & Warehouse
                10: [1, 2, 3, 4, 5, 6, 7, 8, 9, 11], // Logistics & Warehouse
                11: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], // Logistics & Warehouse
                12: [13, 14, 15, 16, 17], // Maintenance
                13: [12, 14, 15, 16, 17], // Maintenance
                14: [12, 13, 15, 16, 17], // Maintenance
                15: [12, 13, 14, 16, 17], // Maintenance
                16: [12, 13, 14, 15, 17], // Maintenance
                17: [12, 13, 14, 15, 16], // Maintenance
                18: [1, 2, 3, 4, 5, 19, 20, 21, 22, 23, 36], // Compliance & Standards
                19: [1, 2, 3, 4, 5, 18, 20, 21, 22, 23, 36], // Compliance & Standards
                20: [1, 2, 3, 4, 5, 18, 19, 21, 22, 23, 36], // Compliance & Standards
                21: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 22, 23, 36], // Suppliers
                22: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 23, 36], // Suppliers
                23: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22, 36], // Suppliers
                36: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23] // Material Specification
            }
        }
    },
};
